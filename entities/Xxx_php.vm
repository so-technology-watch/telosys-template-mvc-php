<?php
// PHP ${fn.capitalize($entity.name)} Entity Class
#set ( $_ = "$" )
class ${fn.capitalize($entity.name)} implements JsonSerializable
{
#set( $attrs = "" )
#foreach( $attribute in $entity.attributes )
    private ${_}${attribute.name};
#if( $foreach.count < 2 )
#set( $attrs = "${_}"+${attribute.name} )
#else
#set( $attrs = $attrs + ", ${_}" + ${attribute.name} )
#end ## end if
#end ## end foreach
##
#set ( $serializedAttribs = "" )
#set ( $cpt = 0 )
#foreach( $attribute in $entity.attributes )
#set ( $cpt = $cpt +1 )
#if ( $cpt > 1 )
#set ( $serializedAttribs = $serializedAttribs + ", " )
#end ## end if
#set ( $serializedAttribs = $serializedAttribs + "'${attribute.name}' => ${_}this->get${fn.capitalize($attribute.name)}()" )
#end ## end foreach
##

    public function __construct( $attrs )
    {
#foreach( $attribute in $entity.attributes )
    	${_}this->${attribute.name} = ${_}${attribute.name};
#end ## end foreach
    }

#foreach( $attribute in $entity.attributes )

    public function get${fn.capitalize($attribute.name)}()
    {
        return ${_}this->${attribute.name};
    }

    public function set${fn.capitalize($attribute.name)}(${_}${fn.uncapitalize($attribute.name)})
    {
        ${_}this->${attribute.name} = ${_}${attribute.name};
    }

#end ## end foreach

	public function jsonSerialize()
    {
        return
            [
				${serializedAttribs}
            ];
    }
}